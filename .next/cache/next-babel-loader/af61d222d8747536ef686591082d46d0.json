{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/components/PokemonArchive/PokemonArchive.js\";\nvar __jsx = React.createElement;\n// @flow strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Navigation } from '../../components/Navigation';\nimport { Quantity } from '../../components/Quantity'; // Objects\n\nimport { Column, Grid, Row, Card } from '../../components/PokemonArchive/Styles'; // PokemonArchive\n\nvar PokemonArchive = function PokemonArchive(_ref) {\n  var pokemon = _ref.pokemon;\n\n  var _useState = useState(pokemon.next),\n      next = _useState[0],\n      setNext = _useState[1];\n\n  var _useState2 = useState(pokemon.previous),\n      previous = _useState2[0],\n      setPrevious = _useState2[1];\n\n  var _useState3 = useState(),\n      query = _useState3[0],\n      setQuery = _useState3[1];\n\n  var _useState4 = useState(pokemon.results),\n      results = _useState4[0],\n      setResults = _useState4[1]; // useEffect\n\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var pokemon;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(query).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              pokemon = _context.sent;\n              setNext(pokemon.next);\n              setPrevious(pokemon.previous);\n              !!pokemon.results && setResults(pokemon.results);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    };\n\n    fetchData();\n  }, [query]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, !!results && results.map(function (result) {\n    return __jsx(Column, {\n      key: result.name,\n      span: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/pokemon/\".concat(result.name),\n      as: \"/pokemon/\".concat(result.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, result.name))));\n  })), __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Quantity, {\n    setQuery: setQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), __jsx(Navigation, {\n    next: next,\n    previous: previous,\n    setQuery: setQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))));\n}; // Export\n\n\nexport { PokemonArchive };","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/components/PokemonArchive/PokemonArchive.js"],"names":["React","useState","useEffect","fetch","styled","Link","Navigation","Quantity","Column","Grid","Row","Card","PokemonArchive","pokemon","next","setNext","previous","setPrevious","query","setQuery","results","setResults","fetchData","then","res","json","map","result","name"],"mappings":"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","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Navigation } from '../../components/Navigation';\nimport { Quantity } from '../../components/Quantity';\n\n// Objects\nimport { Column, Grid, Row, Card } from '../../components/PokemonArchive/Styles';\n\n// PokemonArchive\nconst PokemonArchive = ({ pokemon }) => {\n\tconst [next, setNext] = useState(pokemon.next);\n\tconst [previous, setPrevious] = useState(pokemon.previous);\n\tconst [query, setQuery] = useState();\n\tconst [results, setResults] = useState(pokemon.results);\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tsetNext(pokemon.next);\n\t\t\tsetPrevious(pokemon.previous);\n\n\t\t\t!!pokemon.results && setResults(pokemon.results);\n\t\t};\n\n\t\tfetchData();\n\t}, [query]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Row>\n\t\t\t\t<Grid>\n\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid>\n\t\t\t\t\t{!!results && results.map((result) => (\n\t\t\t\t\t\t<Column key={result.name} span=\"4\">\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Link href={`/pokemon/${result.name}`} as={`/pokemon/${result.name}`}>\n\t\t\t\t\t\t\t\t\t<a>{result.name}</a>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid>\n\t\t\t\t\t<Quantity setQuery={setQuery} />\n\n\t\t\t\t\t<Navigation next={next} previous={previous} setQuery={setQuery} />\n\t\t\t\t</Grid>\n\t\t\t</Row>\n\t\t</React.Fragment>\n\t)\n}\n\n// Export\nexport { PokemonArchive };"]},"metadata":{},"sourceType":"module"}