{"ast":null,"code":"var _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Pokemon\n\nconst Pokemon = ({\n  next,\n  previous,\n  results\n}) => {\n  const {\n    0: data,\n    1: setData\n  } = useState({\n    results: []\n  });\n  const {\n    0: query,\n    1: setQuery\n  } = useState('https://pokeapi.co/api/v2/pokemon'); // useEffect\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const pokemon = await fetch(query).then(res => res.json());\n      console.log(pokemon.results);\n      setData(pokemon.results);\n      console.log(data);\n    };\n\n    fetchData();\n  }, [query]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, data.results.map(pokemon => __jsx(Column, {\n    key: pokemon.name,\n    span: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/pokemon/${pokemon.name}`,\n    as: `/pokemon/${pokemon.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, pokemon.name))))), !!next && __jsx(\"button\", {\n    onClick: () => setQuery(next),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Next\"), !!previous && __jsx(\"button\", {\n    onClick: () => setQuery(previous),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Previous\")));\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","next","previous","results","data","setData","query","setQuery","fetchData","pokemon","then","res","json","console","log","map","name"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAwC;AACvD,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,CAAC;AAAEW,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAhC;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,CAAC,mCAAD,CAAlC,CAFuD,CAIvD;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMe,SAAS,GAAG,YAAY;AAC7B,YAAMC,OAAO,GAAG,MAAMf,KAAK,CAACY,KAAD,CAAL,CACpBI,IADoB,CACfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADQ,CAAtB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACN,OAApB;AAEAE,MAAAA,OAAO,CAACI,OAAO,CAACN,OAAT,CAAP;AAEAU,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,KATD;;AAWAI,IAAAA,SAAS;AACT,GAbQ,EAaN,CAACF,KAAD,CAbM,CAAT;AAeA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,IAAI,CAACD,OAAL,CAAaY,GAAb,CAAkBN,OAAD,IACjB,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAACO,IAArB;AAA2B,IAAA,IAAI,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,YAAWP,OAAO,CAACO,IAAK,EAArC;AAAwC,IAAA,EAAE,EAAG,YAAWP,OAAO,CAACO,IAAK,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,OAAO,CAACO,IAAZ,CADD,CADD,CADD,CADA,CADF,EAWE,CAAC,CAACf,IAAF,IAAU;AAAQ,IAAA,OAAO,EAAE,MAAMM,QAAQ,CAACN,IAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXZ,EAYE,CAAC,CAACC,QAAF,IAAc;AAAQ,IAAA,OAAO,EAAE,MAAMK,QAAQ,CAACL,QAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZhB,CADD,CADD;AAkBA,CAtCD,C,CAwCA;;;AACA,eAAeF,OAAf","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Pokemon\nconst Pokemon = ({ next, previous, results }: Props) => {\n\tconst [data, setData] = useState({ results: [] });\n\tconst [query, setQuery] = useState('https://pokeapi.co/api/v2/pokemon');\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tconsole.log(pokemon.results);\n\n\t\t\tsetData(pokemon.results);\n\n\t\t\tconsole.log(data);\n\t\t};\n\n\t\tfetchData();\n\t}, [query]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{data.results.map((pokemon) => (\n\t\t\t\t\t<Column key={pokemon.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${pokemon.name}`} as={`/pokemon/${pokemon.name}`}>\n\t\t\t\t\t\t\t\t<a>{pokemon.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t{!!next && <button onClick={() => setQuery(next)}>Next</button>}\n\t\t\t\t{!!previous && <button onClick={() => setQuery(previous)}>Previous</button>}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}