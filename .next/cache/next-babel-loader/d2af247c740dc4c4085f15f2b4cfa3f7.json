{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Pokemon\n\nvar Pokemon = function Pokemon() {\n  var _useState = useState({\n    results: []\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(),\n      next = _useState2[0],\n      setNext = _useState2[1];\n\n  var _useState3 = useState(),\n      previous = _useState3[0],\n      setPrevious = _useState3[1];\n\n  var _useState4 = useState(),\n      query = _useState4[0],\n      setQuery = _useState4[1]; // useEffect\n\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var pokemon;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(query).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              pokemon = _context.sent;\n              !!pokemon && setData(pokemon);\n              !!pokemon.next && setNext(pokemon.next);\n              !!pokemon.previous && setPrevious(pokemon.previous);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    };\n\n    fetchData();\n  }, [query]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, !!data.results && data.results.map(function (pokemon) {\n    return __jsx(Column, {\n      key: pokemon.name,\n      span: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/pokemon/\".concat(pokemon.name),\n      as: \"/pokemon/\".concat(pokemon.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, pokemon.name))));\n  }), !!next && __jsx(\"button\", {\n    onClick: function onClick() {\n      return setQuery(next);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Next\"), !!previous && __jsx(\"button\", {\n    onClick: function onClick() {\n      return setQuery(previous);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Previous\")));\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","results","data","setData","next","setNext","previous","setPrevious","query","setQuery","fetchData","then","res","json","pokemon","map","name"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACGR,QAAQ,CAAC;AAAES,IAAAA,OAAO,EAAE;AAAX,GAAD,CADX;AAAA,MACdC,IADc;AAAA,MACRC,OADQ;;AAAA,mBAEGX,QAAQ,EAFX;AAAA,MAEdY,IAFc;AAAA,MAERC,OAFQ;;AAAA,mBAGWb,QAAQ,EAHnB;AAAA,MAGdc,QAHc;AAAA,MAGJC,WAHI;;AAAA,mBAIKf,QAAQ,EAJb;AAAA,MAIdgB,KAJc;AAAA,MAIPC,QAJO,kBAMrB;;;AACAhB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMiB,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACKhB,KAAK,CAACc,KAAD,CAAL,CACpBG,IADoB,CACf,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADY,CADL;;AAAA;AACXC,cAAAA,OADW;AAIjB,eAAC,CAACA,OAAF,IAAaX,OAAO,CAACW,OAAD,CAApB;AACA,eAAC,CAACA,OAAO,CAACV,IAAV,IAAkBC,OAAO,CAACS,OAAO,CAACV,IAAT,CAAzB;AACA,eAAC,CAACU,OAAO,CAACR,QAAV,IAAsBC,WAAW,CAACO,OAAO,CAACR,QAAT,CAAjC;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AASAI,IAAAA,SAAS;AACT,GAXQ,EAWN,CAACF,KAAD,CAXM,CAAT;AAaA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAC,CAACN,IAAI,CAACD,OAAP,IAAkBC,IAAI,CAACD,OAAL,CAAac,GAAb,CAAiB,UAACD,OAAD;AAAA,WACnC,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,OAAO,CAACE,IAArB;AAA2B,MAAA,IAAI,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,IAAD;AAAM,MAAA,IAAI,qBAAcF,OAAO,CAACE,IAAtB,CAAV;AAAwC,MAAA,EAAE,qBAAcF,OAAO,CAACE,IAAtB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,OAAO,CAACE,IAAZ,CADD,CADD,CADD,CADmC;AAAA,GAAjB,CADpB,EAWE,CAAC,CAACZ,IAAF,IAAU;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMK,QAAQ,CAACL,IAAD,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXZ,EAYE,CAAC,CAACE,QAAF,IAAc;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMG,QAAQ,CAACH,QAAD,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZhB,CADD,CADD;AAkBA,CAtCD,C,CAwCA;;;AACA,eAAeN,OAAf","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Pokemon\nconst Pokemon = () => {\n\tconst [data, setData] = useState({ results: [] });\n\tconst [next, setNext] = useState();\n\tconst [previous, setPrevious] = useState();\n\tconst [query, setQuery] = useState();\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\t!!pokemon && setData(pokemon);\n\t\t\t!!pokemon.next && setNext(pokemon.next);\n\t\t\t!!pokemon.previous && setPrevious(pokemon.previous);\n\t\t};\n\n\t\tfetchData();\n\t}, [query]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{!!data.results && data.results.map((pokemon) => (\n\t\t\t\t\t<Column key={pokemon.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${pokemon.name}`} as={`/pokemon/${pokemon.name}`}>\n\t\t\t\t\t\t\t\t<a>{pokemon.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t{!!next && <button onClick={() => setQuery(next)}>Next</button>}\n\t\t\t\t{!!previous && <button onClick={() => setQuery(previous)}>Previous</button>}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}