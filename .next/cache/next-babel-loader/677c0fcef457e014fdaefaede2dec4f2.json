{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\nimport { Navigation } from '../components/Navigation';\nimport { Quantity } from '../components/Quantity'; // Flow\n\n// Pokemon\nvar Pokemon = function Pokemon(_ref) {\n  var pokemon = _ref.pokemon;\n\n  var _useState = useState(pokemon.next),\n      next = _useState[0],\n      setNext = _useState[1];\n\n  var _useState2 = useState(pokemon.previous),\n      previous = _useState2[0],\n      setPrevious = _useState2[1];\n\n  var _useState3 = useState(),\n      query = _useState3[0],\n      setQuery = _useState3[1];\n\n  var _useState4 = useState(pokemon.results),\n      results = _useState4[0],\n      setResults = _useState4[1]; // useEffect\n\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var pokemon;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(query).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              pokemon = _context.sent;\n              setNext(pokemon.next);\n              setPrevious(pokemon.previous);\n              !!pokemon.results && setResults(pokemon.results);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    };\n\n    fetchData();\n  }, [query]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, !!results && results.map(function (result) {\n    return __jsx(Column, {\n      key: result.name,\n      span: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/pokemon/\".concat(result.name),\n      as: \"/pokemon/\".concat(result.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, result.name))));\n  }), __jsx(Quantity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), __jsx(Navigation, _extends({}, pokemon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n}; // Props\n\n\nPokemon.getInitialProps = function _callee() {\n  var pokemon;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://pokeapi.co/api/v2/pokemon').then(function (res) {\n            return res.json();\n          }));\n\n        case 2:\n          pokemon = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            pokemon: pokemon\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Navigation","Quantity","Pokemon","pokemon","next","setNext","previous","setPrevious","query","setQuery","results","setResults","fetchData","then","res","json","map","result","name","getInitialProps"],"mappings":"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","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\nimport { Navigation } from '../components/Navigation';\nimport { Quantity } from '../components/Quantity';\n\n// Flow\ntype Props = {\n\tpokemon: {\n\t\tnext: string,\n\t\tprevious: string,\n\t\tresults: Array<{\n\t\t\tname: string\n\t\t}>\n\t}\n} \n\n// Pokemon\nconst Pokemon = ({ pokemon }: Props) => {\n\tconst [next, setNext] = useState(pokemon.next);\n\tconst [previous, setPrevious] = useState(pokemon.previous);\n\tconst [query, setQuery] = useState();\n\tconst [results, setResults] = useState(pokemon.results);\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tsetNext(pokemon.next);\n\t\t\tsetPrevious(pokemon.previous);\n\n\t\t\t!!pokemon.results && setResults(pokemon.results);\n\t\t};\n\n\t\tfetchData();\n\t}, [query]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{!!results && results.map((result) => (\n\t\t\t\t\t<Column key={result.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${result.name}`} as={`/pokemon/${result.name}`}>\n\t\t\t\t\t\t\t\t<a>{result.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t<Quantity />\n\n\t\t\t\t<Navigation {...pokemon} />\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Props\nPokemon.getInitialProps = async function() {\n\tconst pokemon = await fetch('https://pokeapi.co/api/v2/pokemon')\n\t\t.then(res => res.json());\n\n\treturn { pokemon };\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}