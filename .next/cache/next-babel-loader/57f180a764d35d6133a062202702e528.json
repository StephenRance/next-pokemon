{"ast":null,"code":"var _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Pokemon\n\nconst Pokemon = () => {\n  const {\n    0: pokemon,\n    1: setPokemon\n  } = useState({\n    results: []\n  });\n  const {\n    0: query,\n    1: setQuery\n  } = useState('https://pokeapi.co/api/v2/pokemon'); // useEffect\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const pokemon = await fetch(query).then(res => res.json());\n      console.log(pokemon.results);\n      setPokemon(pokemon.results);\n    };\n\n    fetchData();\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, pokemon.results.map(pokemon => __jsx(Column, {\n    key: pokemon.name,\n    span: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/pokemon/${pokemon.name}`,\n    as: `/pokemon/${pokemon.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, pokemon.name)))))));\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","pokemon","setPokemon","results","query","setQuery","fetchData","then","res","json","console","log","map","name"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC;AAAEW,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAtC;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC,mCAAD,CAAlC,CAFqB,CAIrB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,SAAS,GAAG,YAAY;AAC7B,YAAML,OAAO,GAAG,MAAMP,KAAK,CAACU,KAAD,CAAL,CACpBG,IADoB,CACfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADQ,CAAtB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAO,CAACE,OAApB;AAEAD,MAAAA,UAAU,CAACD,OAAO,CAACE,OAAT,CAAV;AACA,KAPD;;AASAG,IAAAA,SAAS;AACT,GAXQ,EAWN,EAXM,CAAT;AAaA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEL,OAAO,CAACE,OAAR,CAAgBS,GAAhB,CAAqBX,OAAD,IACpB,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAACY,IAArB;AAA2B,IAAA,IAAI,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,YAAWZ,OAAO,CAACY,IAAK,EAArC;AAAwC,IAAA,EAAE,EAAG,YAAWZ,OAAO,CAACY,IAAK,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,OAAO,CAACY,IAAZ,CADD,CADD,CADD,CADA,CADF,CADD,CADD;AAeA,CAjCD,C,CAmCA;;;AACA,eAAeb,OAAf","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Pokemon\nconst Pokemon = () => {\n\tconst [pokemon, setPokemon] = useState({ results: [] });\n\tconst [query, setQuery] = useState('https://pokeapi.co/api/v2/pokemon');\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tconsole.log(pokemon.results);\n\n\t\t\tsetPokemon(pokemon.results);\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{pokemon.results.map((pokemon) => (\n\t\t\t\t\t<Column key={pokemon.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${pokemon.name}`} as={`/pokemon/${pokemon.name}`}>\n\t\t\t\t\t\t\t\t<a>{pokemon.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}