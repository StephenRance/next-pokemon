{"ast":null,"code":"var _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Flow\n\n// Pokemon\nconst Pokemon = ({\n  next,\n  pokemon,\n  previous,\n  results\n}) => {\n  const {\n    0: items,\n    1: setItems\n  } = useState({\n    results: []\n  });\n  const {\n    0: query,\n    1: setQuery\n  } = useState('https://pokeapi.co/api/v2/pokemon'); // useEffect\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const pokemon = await fetch(query).then(res => res.json());\n      console.log(pokemon);\n      !!pokemon.results && setItems(pokemon.results);\n    };\n\n    fetchData();\n  }, []);\n  console.log(next, previous);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, !!items && items.map(item => __jsx(Column, {\n    key: item.name,\n    span: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/pokemon/${item.name}`,\n    as: `/pokemon/${item.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, item.name))))), !!next && __jsx(\"button\", {\n    onClick: () => setQuery(next),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Next\"), !!previous && __jsx(\"button\", {\n    onClick: () => setQuery(previous),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Previous\")));\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","next","pokemon","previous","results","items","setItems","query","setQuery","fetchData","then","res","json","console","log","map","item","name"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;;AAWA;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAAiD;AAChE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC;AAAEY,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAlC;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBhB,QAAQ,CAAC,mCAAD,CAAlC,CAFgE,CAIhE;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMgB,SAAS,GAAG,YAAY;AAC7B,YAAMP,OAAO,GAAG,MAAMR,KAAK,CAACa,KAAD,CAAL,CACpBG,IADoB,CACfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADQ,CAAtB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AAEA,OAAC,CAACA,OAAO,CAACE,OAAV,IAAqBE,QAAQ,CAACJ,OAAO,CAACE,OAAT,CAA7B;AACA,KAPD;;AASAK,IAAAA,SAAS;AACT,GAXQ,EAWN,EAXM,CAAT;AAaAI,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ,EAAkBE,QAAlB;AAEA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAC,CAACE,KAAF,IAAWA,KAAK,CAACU,GAAN,CAAWC,IAAD,IACrB,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACC,IAAlB;AAAwB,IAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,YAAWD,IAAI,CAACC,IAAK,EAAlC;AAAqC,IAAA,EAAE,EAAG,YAAWD,IAAI,CAACC,IAAK,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACC,IAAT,CADD,CADD,CADD,CADW,CADb,EAWE,CAAC,CAAChB,IAAF,IAAU;AAAQ,IAAA,OAAO,EAAE,MAAMO,QAAQ,CAACP,IAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXZ,EAYE,CAAC,CAACE,QAAF,IAAc;AAAQ,IAAA,OAAO,EAAE,MAAMK,QAAQ,CAACL,QAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZhB,CADD,CADD;AAkBA,CAtCD,C,CAwCA;;;AACA,eAAeH,OAAf","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Flow\ntype Props = {\n\tnext: string,\n\tpokemon: {},\n\tprevious: string,\n\tresults: Array<{\n\t\tid: number,\n\t\tname: string\n\t}>\n} \n\n// Pokemon\nconst Pokemon = ({ next, pokemon, previous, results }: Props) => {\n\tconst [items, setItems] = useState({ results: [] });\n\tconst [query, setQuery] = useState('https://pokeapi.co/api/v2/pokemon');\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tconsole.log(pokemon);\n\n\t\t\t!!pokemon.results && setItems(pokemon.results);\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\tconsole.log(next, previous);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{!!items && items.map((item) => (\n\t\t\t\t\t<Column key={item.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${item.name}`} as={`/pokemon/${item.name}`}>\n\t\t\t\t\t\t\t\t<a>{item.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t{!!next && <button onClick={() => setQuery(next)}>Next</button>}\n\t\t\t\t{!!previous && <button onClick={() => setQuery(previous)}>Previous</button>}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}