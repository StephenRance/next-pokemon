{"ast":null,"code":"//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Flow\n\n// Pokemon\nconst Pokemon = ({\n  next,\n  pokemon,\n  previous,\n  results\n}) => {\n  const {\n    0: items,\n    1: setItems\n  } = useState({\n    results: []\n  });\n  const {\n    0: query,\n    1: setQuery\n  } = useState('https://pokeapi.co/api/v2/pokemon'); // useEffect\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const pokemon = await fetch(query).then(res => res.json());\n      console.log(pokemon);\n      !!pokemon.results && setItems(pokemon.results);\n    };\n\n    fetchData();\n  }, []);\n  console.log(next, previous);\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","next","pokemon","previous","results","items","setItems","query","setQuery","fetchData","then","res","json","console","log"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;;AAWA;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAAiD;AAChE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAAC;AAAEY,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAlC;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBhB,QAAQ,CAAC,mCAAD,CAAlC,CAFgE,CAIhE;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMgB,SAAS,GAAG,YAAY;AAC7B,YAAMP,OAAO,GAAG,MAAMR,KAAK,CAACa,KAAD,CAAL,CACpBG,IADoB,CACfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADQ,CAAtB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AAEA,OAAC,CAACA,OAAO,CAACE,OAAV,IAAqBE,QAAQ,CAACJ,OAAO,CAACE,OAAT,CAA7B;AACA,KAPD;;AASAK,IAAAA,SAAS;AACT,GAXQ,EAWN,EAXM,CAAT;AAaAI,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ,EAAkBE,QAAlB;AACA,CAnBD,C,CAqBA;;;AACA,eAAeH,OAAf","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Flow\ntype Props = {\n\tnext: string,\n\tpokemon: {},\n\tprevious: string,\n\tresults: Array<{\n\t\tid: number,\n\t\tname: string\n\t}>\n} \n\n// Pokemon\nconst Pokemon = ({ next, pokemon, previous, results }: Props) => {\n\tconst [items, setItems] = useState({ results: [] });\n\tconst [query, setQuery] = useState('https://pokeapi.co/api/v2/pokemon');\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tconsole.log(pokemon);\n\n\t\t\t!!pokemon.results && setItems(pokemon.results);\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\tconsole.log(next, previous);\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}