{"ast":null,"code":"var _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Flow\n\n// Pokemon\nconst Pokemon = ({\n  next,\n  previous,\n  results\n}) => {\n  const {\n    0: pokemon,\n    1: setPokemon\n  } = useState({\n    results: []\n  });\n  const {\n    0: query,\n    1: setQuery\n  } = useState(); // useEffect\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const pokemon = await fetch(query).then(res => res.json());\n      console.log(pokemon.results);\n      setPokemon(pokemon.results);\n      console.log(pokemon);\n    };\n\n    fetchData();\n  }, [query]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, results.map(pokemon => __jsx(Column, {\n    key: pokemon.name,\n    span: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/pokemon/${pokemon.name}`,\n    as: `/pokemon/${pokemon.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, pokemon.name))))), !!next && __jsx(\"button\", {\n    onClick: () => setQuery(next),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Next\"), !!previous && __jsx(\"button\", {\n    onClick: () => setQuery(previous),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Previous\")));\n}; // Props\n\n\nPokemon.getInitialProps = async function () {\n  const pokemon = await fetch(`https://pokeapi.co/api/v2/pokemon`).then(res => res.json());\n  return {\n    next: pokemon.next,\n    previous: pokemon.previous,\n    results: pokemon.results\n  };\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","next","previous","results","pokemon","setPokemon","query","setQuery","fetchData","then","res","json","console","log","map","name","getInitialProps"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;;AAUA;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAwC;AACvD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC;AAAEW,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAtC;AACA,QAAM;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,EAAlC,CAFuD,CAIvD;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMe,SAAS,GAAG,YAAY;AAC7B,YAAMJ,OAAO,GAAG,MAAMV,KAAK,CAACY,KAAD,CAAL,CACpBG,IADoB,CACfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADQ,CAAtB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAO,CAACD,OAApB;AAEAE,MAAAA,UAAU,CAACD,OAAO,CAACD,OAAT,CAAV;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACA,KATD;;AAWAI,IAAAA,SAAS;AACT,GAbQ,EAaN,CAACF,KAAD,CAbM,CAAT;AAeA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,OAAO,CAACW,GAAR,CAAaV,OAAD,IACZ,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAACW,IAArB;AAA2B,IAAA,IAAI,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,YAAWX,OAAO,CAACW,IAAK,EAArC;AAAwC,IAAA,EAAE,EAAG,YAAWX,OAAO,CAACW,IAAK,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIX,OAAO,CAACW,IAAZ,CADD,CADD,CADD,CADA,CADF,EAWE,CAAC,CAACd,IAAF,IAAU;AAAQ,IAAA,OAAO,EAAE,MAAMM,QAAQ,CAACN,IAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXZ,EAYE,CAAC,CAACC,QAAF,IAAc;AAAQ,IAAA,OAAO,EAAE,MAAMK,QAAQ,CAACL,QAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZhB,CADD,CADD;AAkBA,CAtCD,C,CAwCA;;;AACAF,OAAO,CAACgB,eAAR,GAA0B,kBAAiB;AAC1C,QAAMZ,OAAO,GAAG,MAAMV,KAAK,CAAE,mCAAF,CAAL,CACpBe,IADoB,CACfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADQ,CAAtB;AAGA,SAAO;AAAEV,IAAAA,IAAI,EAAEG,OAAO,CAACH,IAAhB;AAAsBC,IAAAA,QAAQ,EAAEE,OAAO,CAACF,QAAxC;AAAkDC,IAAAA,OAAO,EAAEC,OAAO,CAACD;AAAnE,GAAP;AACA,CALD,C,CAOA;;;AACA,eAAeH,OAAf","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Flow\ntype Props = {\n\tnext: string,\n\tprevious: string,\n\tresults: Array<{\n\t\tid: number,\n\t\tname: string\n\t}>\n} \n\n// Pokemon\nconst Pokemon = ({ next, previous, results }: Props) => {\n\tconst [pokemon, setPokemon] = useState({ results: [] });\n\tconst [query, setQuery] = useState();\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tconsole.log(pokemon.results);\n\n\t\t\tsetPokemon(pokemon.results);\n\n\t\t\tconsole.log(pokemon);\n\t\t};\n\n\t\tfetchData();\n\t}, [query]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{results.map((pokemon) => (\n\t\t\t\t\t<Column key={pokemon.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${pokemon.name}`} as={`/pokemon/${pokemon.name}`}>\n\t\t\t\t\t\t\t\t<a>{pokemon.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t{!!next && <button onClick={() => setQuery(next)}>Next</button>}\n\t\t\t\t{!!previous && <button onClick={() => setQuery(previous)}>Previous</button>}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Props\nPokemon.getInitialProps = async function() {\n\tconst pokemon = await fetch(`https://pokeapi.co/api/v2/pokemon`)\n\t\t.then(res => res.json());\n\n\treturn { next: pokemon.next, previous: pokemon.previous, results: pokemon.results };\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}