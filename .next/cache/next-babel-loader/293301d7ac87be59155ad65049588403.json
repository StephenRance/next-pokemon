{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Flow\n\n// Pokemon\nvar Pokemon = function Pokemon(_ref) {\n  var next = _ref.next,\n      previous = _ref.previous,\n      results = _ref.results;\n\n  var _useState = useState(),\n      nextPage = _useState[0],\n      setNextPage = _useState[1];\n\n  var _useState2 = useState(),\n      previousPage = _useState2[0],\n      setPreviousPage = _useState2[1]; // useEffect\n\n\n  useEffect(function (url) {\n    function fetchPokemon(url) {\n      var pokemon;\n      return _regeneratorRuntime.async(function fetchPokemon$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              pokemon = _context.sent;\n              !!pokemon.next && setNextPage(pokemon.next);\n              !!pokemon.previous && setPreviousPage(pokemon.previous);\n              console.log(pokemon.results);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    }\n\n    fetchPokemon(url);\n  }, []);\n  console.log(next, previous);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, !!results && results.map(function (result) {\n    return __jsx(Column, {\n      key: result.name,\n      span: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/pokemon/\".concat(result.name),\n      as: \"/pokemon/\".concat(result.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, result.name))));\n  }), !!next && __jsx(\"button\", {\n    onClick: function onClick() {\n      return setPage(next);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Next\"), !!previous && __jsx(\"button\", {\n    onClick: function onClick() {\n      return setPage(previous);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Previous\")));\n}; // Props\n\n\nPokemon.getInitialProps = function _callee() {\n  var pokemon;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://pokeapi.co/api/v2/pokemon\").then(function (res) {\n            return res.json();\n          }));\n\n        case 2:\n          pokemon = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            next: pokemon.next,\n            previous: pokemon.previous,\n            results: pokemon.results\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","next","previous","results","nextPage","setNextPage","previousPage","setPreviousPage","url","fetchPokemon","then","res","json","pokemon","console","log","map","result","name","setPage","getInitialProps"],"mappings":"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","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Flow\ntype Props = {\n\tnext: string,\n\tprevious: string,\n\tresults: Array<{\n\t\tid: number,\n\t\tname: string\n\t}>\n} \n\n// Pokemon\nconst Pokemon = ({ next, previous, results }: Props) => {\n\tconst [nextPage, setNextPage] = useState();\n\tconst [previousPage, setPreviousPage] = useState();\n\n\t// useEffect\n\tuseEffect((url) => {\n\t\tasync function fetchPokemon(url) {\n\t\t\tconst pokemon = await fetch(url)\n\t\t\t\t.then(res => res.json());\n\t\t\t\n\t\t\t!!pokemon.next && setNextPage(pokemon.next);\n\t\t\t!!pokemon.previous && setPreviousPage(pokemon.previous);\n\n\t\t\tconsole.log(pokemon.results);\n\t\t}\n\n\t\tfetchPokemon(url);\n\t}, []);\n\n\tconsole.log(next, previous);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{!!results && results.map((result) => (\n\t\t\t\t\t<Column key={result.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${result.name}`} as={`/pokemon/${result.name}`}>\n\t\t\t\t\t\t\t\t<a>{result.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t{!!next && <button onClick={() => setPage(next)}>Next</button>}\n\t\t\t\t{!!previous && <button onClick={() => setPage(previous)}>Previous</button>}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Props\nPokemon.getInitialProps = async function() {\n\tconst pokemon = await fetch(`https://pokeapi.co/api/v2/pokemon`)\n\t\t.then(res => res.json());\n\n\treturn { next: pokemon.next, previous: pokemon.previous, results: pokemon.results };\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}