{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Flow\n\n// Pokemon\nvar Pokemon = function Pokemon(_ref) {\n  var next = _ref.next,\n      pokemon = _ref.pokemon,\n      previous = _ref.previous,\n      results = _ref.results;\n\n  var _useState = useState({\n    results: []\n  }),\n      items = _useState[0],\n      setItems = _useState[1];\n\n  var _useState2 = useState('https://pokeapi.co/api/v2/pokemon'),\n      query = _useState2[0],\n      setQuery = _useState2[1]; // useEffect\n\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var pokemon;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(query).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              pokemon = _context.sent;\n              console.log(pokemon);\n              !!pokemon.results && setItems(pokemon.results);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    };\n\n    fetchData();\n  }, []);\n  console.log(next, previous);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, !!items && items.map(function (item) {\n    return __jsx(Column, {\n      key: item.name,\n      span: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/pokemon/\".concat(item.name),\n      as: \"/pokemon/\".concat(item.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, item.name))));\n  }), !!next && __jsx(\"button\", {\n    onClick: function onClick() {\n      return setQuery(next);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Next\"), !!previous && __jsx(\"button\", {\n    onClick: function onClick() {\n      return setQuery(previous);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Previous\")));\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","next","pokemon","previous","results","items","setItems","query","setQuery","fetchData","then","res","json","console","log","map","item","name"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;;AAWA;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiD;AAAA,MAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,MAAxCC,OAAwC,QAAxCA,OAAwC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;;AAAA,kBACtCZ,QAAQ,CAAC;AAAEY,IAAAA,OAAO,EAAE;AAAX,GAAD,CAD8B;AAAA,MACzDC,KADyD;AAAA,MAClDC,QADkD;;AAAA,mBAEtCd,QAAQ,CAAC,mCAAD,CAF8B;AAAA,MAEzDe,KAFyD;AAAA,MAElDC,QAFkD,kBAIhE;;;AACAf,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMgB,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACKf,KAAK,CAACa,KAAD,CAAL,CACpBG,IADoB,CACf,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADY,CADL;;AAAA;AACXV,cAAAA,OADW;AAIjBW,cAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AAEA,eAAC,CAACA,OAAO,CAACE,OAAV,IAAqBE,QAAQ,CAACJ,OAAO,CAACE,OAAT,CAA7B;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AASAK,IAAAA,SAAS;AACT,GAXQ,EAWN,EAXM,CAAT;AAaAI,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ,EAAkBE,QAAlB;AAEA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAC,CAACE,KAAF,IAAWA,KAAK,CAACU,GAAN,CAAU,UAACC,IAAD;AAAA,WACrB,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAlB;AAAwB,MAAA,IAAI,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,IAAD;AAAM,MAAA,IAAI,qBAAcD,IAAI,CAACC,IAAnB,CAAV;AAAqC,MAAA,EAAE,qBAAcD,IAAI,CAACC,IAAnB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACC,IAAT,CADD,CADD,CADD,CADqB;AAAA,GAAV,CADb,EAWE,CAAC,CAAChB,IAAF,IAAU;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMO,QAAQ,CAACP,IAAD,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXZ,EAYE,CAAC,CAACE,QAAF,IAAc;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMK,QAAQ,CAACL,QAAD,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZhB,CADD,CADD;AAkBA,CAtCD,C,CAwCA;;;AACA,eAAeH,OAAf","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Flow\ntype Props = {\n\tnext: string,\n\tpokemon: {},\n\tprevious: string,\n\tresults: Array<{\n\t\tid: number,\n\t\tname: string\n\t}>\n} \n\n// Pokemon\nconst Pokemon = ({ next, pokemon, previous, results }: Props) => {\n\tconst [items, setItems] = useState({ results: [] });\n\tconst [query, setQuery] = useState('https://pokeapi.co/api/v2/pokemon');\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tconsole.log(pokemon);\n\n\t\t\t!!pokemon.results && setItems(pokemon.results);\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\tconsole.log(next, previous);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{!!items && items.map((item) => (\n\t\t\t\t\t<Column key={item.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${item.name}`} as={`/pokemon/${item.name}`}>\n\t\t\t\t\t\t\t\t<a>{item.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t{!!next && <button onClick={() => setQuery(next)}>Next</button>}\n\t\t\t\t{!!previous && <button onClick={() => setQuery(previous)}>Previous</button>}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}