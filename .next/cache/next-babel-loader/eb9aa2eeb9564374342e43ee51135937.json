{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Pokemon\n\nvar Pokemon = function Pokemon() {\n  var _useState = useState({\n    results: []\n  }),\n      items = _useState[0],\n      setItems = _useState[1];\n\n  var _useState2 = useState('https://pokeapi.co/api/v2/pokemon'),\n      query = _useState2[0],\n      setQuery = _useState2[1]; // useEffect\n\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var pokemon;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(query).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              pokemon = _context.sent;\n              console.log(pokemon.results);\n              setItems(pokemon.results);\n              console.log(items);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    };\n\n    fetchData();\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"foo\"));\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","results","items","setItems","query","setQuery","fetchData","then","res","json","pokemon","console","log"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACKR,QAAQ,CAAC;AAAES,IAAAA,OAAO,EAAE;AAAX,GAAD,CADb;AAAA,MACdC,KADc;AAAA,MACPC,QADO;;AAAA,mBAEKX,QAAQ,CAAC,mCAAD,CAFb;AAAA,MAEdY,KAFc;AAAA,MAEPC,QAFO,kBAIrB;;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMa,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACKZ,KAAK,CAACU,KAAD,CAAL,CACpBG,IADoB,CACf,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADY,CADL;;AAAA;AACXC,cAAAA,OADW;AAIjBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACT,OAApB;AAEAE,cAAAA,QAAQ,CAACO,OAAO,CAACT,OAAT,CAAR;AAEAU,cAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;;AARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAWAI,IAAAA,SAAS;AACT,GAbQ,EAaN,EAbM,CAAT;AAeA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,CADD;AAOA,CA3BD,C,CA6BA;;;AACA,eAAeN,OAAf","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Pokemon\nconst Pokemon = () => {\n\tconst [items, setItems] = useState({ results: [] });\n\tconst [query, setQuery] = useState('https://pokeapi.co/api/v2/pokemon');\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tconsole.log(pokemon.results);\n\n\t\t\tsetItems(pokemon.results);\n\n\t\t\tconsole.log(items);\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\tfoo\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}