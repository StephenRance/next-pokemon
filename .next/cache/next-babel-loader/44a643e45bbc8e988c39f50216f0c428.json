{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Flow\n\n// Pokemon\nvar Pokemon = function Pokemon(_ref) {\n  var next = _ref.next,\n      pokemon = _ref.pokemon,\n      previous = _ref.previous,\n      results = _ref.results;\n\n  var _useState = useState('https://pokeapi.co/api/v2/pokemon'),\n      page = _useState[0],\n      setPage = _useState[1]; // useEffect\n\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var pokemon;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(page).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              pokemon = _context.sent;\n              return _context.abrupt(\"return\", {\n                next: pokemon.next,\n                pokemon: pokemon,\n                previous: pokemon.previous,\n                results: pokemon.results\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    };\n\n    fetchData();\n  }, []);\n  console.log(next, previous);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, !!results && results.map(function (result) {\n    return __jsx(Column, {\n      key: result.name,\n      span: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/pokemon/\".concat(result.name),\n      as: \"/pokemon/\".concat(result.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, result.name))));\n  }), !!next && __jsx(\"button\", {\n    onClick: function onClick() {\n      return setPage(next);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Next\"), !!previous && __jsx(\"button\", {\n    onClick: function onClick() {\n      return setPage(previous);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Previous\")));\n}; // Props\n\n\nPokemon.getInitialProps = function _callee() {\n  var pokemon;\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://pokeapi.co/api/v2/pokemon\").then(function (res) {\n            return res.json();\n          }));\n\n        case 2:\n          pokemon = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            next: pokemon.next,\n            pokemon: pokemon,\n            previous: pokemon.previous,\n            results: pokemon.results\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","next","pokemon","previous","results","page","setPage","fetchData","then","res","json","console","log","map","result","name","getInitialProps"],"mappings":"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","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Flow\ntype Props = {\n\tnext: string,\n\tpokemon: {},\n\tprevious: string,\n\tresults: Array<{\n\t\tid: number,\n\t\tname: string\n\t}>\n} \n\n// Pokemon\nconst Pokemon = ({ next, pokemon, previous, results }: Props) => {\n\tconst [page, setPage] = useState('https://pokeapi.co/api/v2/pokemon');\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(page)\n\t\t\t\t.then(res => res.json());\n\n\t\t\treturn { next: pokemon.next, pokemon, previous: pokemon.previous, results: pokemon.results };\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\tconsole.log(next, previous);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{!!results && results.map((result) => (\n\t\t\t\t\t<Column key={result.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${result.name}`} as={`/pokemon/${result.name}`}>\n\t\t\t\t\t\t\t\t<a>{result.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t{!!next && <button onClick={() => setPage(next)}>Next</button>}\n\t\t\t\t{!!previous && <button onClick={() => setPage(previous)}>Previous</button>}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Props\nPokemon.getInitialProps = async function() {\n\tconst pokemon = await fetch(`https://pokeapi.co/api/v2/pokemon`)\n\t\t.then(res => res.json());\n\n\treturn { next: pokemon.next, pokemon, previous: pokemon.previous, results: pokemon.results };\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}