{"ast":null,"code":"var _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nvar __jsx = React.createElement;\n//  strict\nimport React, { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Pokemon\n\nconst Pokemon = () => {\n  const {\n    0: next,\n    1: setNext\n  } = useState([]);\n  const {\n    0: page,\n    1: setPage\n  } = useState([]);\n  const {\n    0: previous,\n    1: setPrevious\n  } = useState([]); // useEffect\n\n  useEffect(url => {\n    async function fetchPokemon(url = 'https://pokeapi.co/api/v2/pokemon') {\n      const pokemon = await fetch(url).then(res => res.json());\n      setNext(pokemon.next);\n      setPage(pokemon.results);\n      setPrevious(pokemon.previous);\n      console.log(pokemon.next);\n      console.log(pokemon.page);\n      console.log(pokemon.previous);\n    }\n\n    fetchPokemon(url);\n  }, []);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, !!page && page.map(pokemon => __jsx(Column, {\n    key: pokemon.name,\n    span: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/pokemon/${pokemon.name}`,\n    as: `/pokemon/${pokemon.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, pokemon.name))))), __jsx(\"button\", {\n    onClick: () => setNext(next),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Load\")));\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["React","useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","next","setNext","page","setPage","previous","setPrevious","url","fetchPokemon","pokemon","then","res","json","results","console","log","map","name"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACW,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAC,EAAD,CAAxC,CAHqB,CAKrB;;AACAC,EAAAA,SAAS,CAAEc,GAAD,IAAS;AAClB,mBAAeC,YAAf,CAA4BD,GAAG,GAAG,mCAAlC,EAAuE;AACtE,YAAME,OAAO,GAAG,MAAMf,KAAK,CAACa,GAAD,CAAL,CACpBG,IADoB,CACfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADQ,CAAtB;AAGAV,MAAAA,OAAO,CAACO,OAAO,CAACR,IAAT,CAAP;AACAG,MAAAA,OAAO,CAACK,OAAO,CAACI,OAAT,CAAP;AACAP,MAAAA,WAAW,CAACG,OAAO,CAACJ,QAAT,CAAX;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACR,IAApB;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACN,IAApB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACJ,QAApB;AACA;;AAEDG,IAAAA,YAAY,CAACD,GAAD,CAAZ;AACA,GAfQ,EAeN,EAfM,CAAT;AAiBA,SACC,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAAC,CAACJ,IAAF,IAAUA,IAAI,CAACa,GAAL,CAAUP,OAAD,IACnB,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAACQ,IAArB;AAA2B,IAAA,IAAI,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,YAAWR,OAAO,CAACQ,IAAK,EAArC;AAAwC,IAAA,EAAE,EAAG,YAAWR,OAAO,CAACQ,IAAK,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,OAAO,CAACQ,IAAZ,CADD,CADD,CADD,CADU,CADZ,EAWC;AAAQ,IAAA,OAAO,EAAE,MAAMf,OAAO,CAACD,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXD,CADD,CADD;AAiBA,CAxCD,C,CA0CA;;;AACA,eAAeD,OAAf","sourcesContent":["// @flow strict\nimport React, { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Pokemon\nconst Pokemon = () => {\n\tconst [next, setNext] = useState([]);\n\tconst [page, setPage] = useState([]);\n\tconst [previous, setPrevious] = useState([]);\n\n\t// useEffect\n\tuseEffect((url) => {\n\t\tasync function fetchPokemon(url = 'https://pokeapi.co/api/v2/pokemon') {\n\t\t\tconst pokemon = await fetch(url)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tsetNext(pokemon.next);\n\t\t\tsetPage(pokemon.results);\n\t\t\tsetPrevious(pokemon.previous);\n\n\t\t\tconsole.log(pokemon.next);\n\t\t\tconsole.log(pokemon.page);\n\t\t\tconsole.log(pokemon.previous);\n\t\t}\n\n\t\tfetchPokemon(url);\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{!!page && page.map((pokemon) => (\n\t\t\t\t\t<Column key={pokemon.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${pokemon.name}`} as={`/pokemon/${pokemon.name}`}>\n\t\t\t\t\t\t\t\t<a>{pokemon.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t<button onClick={() => setNext(next)}>Load</button>\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}