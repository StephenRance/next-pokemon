{"ast":null,"code":"var _jsxFileName = \"/Users/stephenrance/Docker/next-pokemon/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//  strict\nimport { useState, useEffect } from \"react\"; // $FlowIgnore\n\nimport fetch from 'isomorphic-unfetch'; // $FlowIgnore\n\nimport styled from 'styled-components'; // $FlowIgnore\n\nimport Link from 'next/link'; // Components\n\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid'; // Flow\n\n// Pokemon\nconst Pokemon = ({\n  pokemon\n}) => {\n  const {\n    0: next,\n    1: setNext\n  } = useState(pokemon.next);\n  const {\n    0: previous,\n    1: setPrevious\n  } = useState(pokemon.previous);\n  const {\n    0: query,\n    1: setQuery\n  } = useState();\n  const {\n    0: results,\n    1: setResults\n  } = useState(pokemon.results); // useEffect\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const pokemon = await fetch(query).then(res => res.json());\n      setNext(pokemon.next);\n      setPrevious(pokemon.previous);\n      !!pokemon.results && setResults(pokemon.results);\n    };\n\n    fetchData();\n  }, [query]);\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, !!results && results.map(result => __jsx(Column, {\n    key: result.name,\n    span: \"4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: `/pokemon/${result.name}`,\n    as: `/pokemon/${result.name}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, result.name))))), !!next && __jsx(\"button\", {\n    onClick: () => setQuery(next),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Next\"), !!previous && __jsx(\"button\", {\n    onClick: () => setQuery(previous),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Previous\")));\n}; // Props\n\n\nPokemon.getInitialProps = async function () {\n  const pokemon = await fetch('https://pokeapi.co/api/v2/pokemon').then(res => res.json());\n  return {\n    pokemon\n  };\n}; // Export\n\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/stephenrance/Docker/next-pokemon/pages/index.js"],"names":["useState","useEffect","fetch","styled","Link","Card","Column","Grid","Pokemon","pokemon","next","setNext","previous","setPrevious","query","setQuery","results","setResults","fetchData","then","res","json","map","result","name","getInitialProps"],"mappings":"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","sourcesContent":["// @flow strict\nimport { useState, useEffect } from \"react\";\n\n// $FlowIgnore\nimport fetch from 'isomorphic-unfetch';\n\n// $FlowIgnore\nimport styled from 'styled-components';\n\n// $FlowIgnore\nimport Link from 'next/link';\n\n// Components\nimport { Card } from '../components/Card';\nimport { Column } from '../components/Column';\nimport { Grid } from '../components/Grid';\n\n// Flow\ntype Props = {\n\tpokemon: {\n\t\tnext: string,\n\t\tprevious: string,\n\t\tresults: Array<{\n\t\t\tname: string\n\t\t}>\n\t}\n} \n\n// Pokemon\nconst Pokemon = ({ pokemon }: Props) => {\n\tconst [next, setNext] = useState(pokemon.next);\n\tconst [previous, setPrevious] = useState(pokemon.previous);\n\tconst [query, setQuery] = useState();\n\tconst [results, setResults] = useState(pokemon.results);\n\n\t// useEffect\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst pokemon = await fetch(query)\n\t\t\t\t.then(res => res.json());\n\n\t\t\tsetNext(pokemon.next);\n\t\t\tsetPrevious(pokemon.previous);\n\n\t\t\t!!pokemon.results && setResults(pokemon.results);\n\t\t};\n\n\t\tfetchData();\n\t}, [query]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid>\n\t\t\t\t{!!results && results.map((result) => (\n\t\t\t\t\t<Column key={result.name} span=\"4\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Link href={`/pokemon/${result.name}`} as={`/pokemon/${result.name}`}>\n\t\t\t\t\t\t\t\t<a>{result.name}</a>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Column>\n\t\t\t\t))}\n\n\t\t\t\t{!!next && <button onClick={() => setQuery(next)}>Next</button>}\n\t\t\t\t{!!previous && <button onClick={() => setQuery(previous)}>Previous</button>}\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t)\n}\n\n// Props\nPokemon.getInitialProps = async function() {\n\tconst pokemon = await fetch('https://pokeapi.co/api/v2/pokemon')\n\t\t.then(res => res.json());\n\n\treturn { pokemon };\n}\n\n// Export\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}